#!/usr/bin/env node

const app = require("../app")
const debug = require("debug")("prod-requests:server")
const http = require("http")
const mongoose = require("mongoose")
const socketServer = require("../socket.io/server")

const port = normalizePort(process.env.PORT || "3000")
app.set("port", port)

const server = http.createServer(app)
socketServer(server)
mongoose.connect(
  
    `mongodb+srv://${process.env.DB_USERNAME}:${process.env.DB_PASSWORD}@cluster0.keekg.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0`
)

server.listen(port)
server.on("error", onError)
server.on("listening", onListening)

function normalizePort(val) {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

function onError(error) {
  if (error.syscall !== "listen") {
    throw error
  }

  const bind = typeof port === "string" ? "Pipe " + port : "Port " + port

  switch (error.code) {
    case "EACCES":
      console.error(bind + " requires elevated privileges")
      process.exit(1)
      break
    case "EADDRINUSE":
      console.error(bind + " is already in use")
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  const addr = server.address()
  const bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port
  console.log(`Listening on ${bind}`)
  debug("Listening on " + bind)
}
